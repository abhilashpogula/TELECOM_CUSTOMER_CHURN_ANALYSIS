# -*- coding: utf-8 -*-
"""Customer Churn analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xGxr7xfValPCgzxC_88FIcLq6xfKTylY

# **CODE TO IMPORT RAW INTO PYTHON**
"""

from google.colab import files
uploaded = files.upload()

"""# **CODE TO REMOVE DUPLICATE CELLS DROM THE RAW DATA**"""

import pandas as pd

# Load the Excel file
file_path = "/mnt/data/02 Customer Churn-Dataset(2).xlsx"

# Display shape before removing duplicates
print("Before removing duplicates:", df.shape)

# Remove duplicate rows
df_cleaned = df.drop_duplicates()

# Display shape after removing duplicates
print("After removing duplicates:", df_cleaned.shape)



"""# **CODE TO REMOVE OR ASSIGN VALUE TO  EMPTY CELLS FROM THE DATASET**

"""

import pandas as pd

df = df.dropna()  # Removes rows with any empty cells
df.to_excel("Cleaned_File_No_Empty.xlsx", index=False)
# Display shape before removing rows with any empty cells:
print("Before removing rows with any empty cells:", df.shape)
# Display shape after removingrows with any empty cells:
print("Before removing rows with any empty cells:", df.shape)

"""# **CODE ASSIGN A VALUE ($) TO THE CLOUMNS IN A DATASET**"""

df["MonthlyCharges"] = df["MonthlyCharges"].apply(lambda x: f"${x}")
df["TotalCharges"] = df["TotalCharges"].apply(lambda x: f"${x}")

"""# **CODE TO SAVE A CLEANED DATASE**"""

df.to_excel("Cleaned_Data.xlsx", index=False)

"""# **DOWNLOADING DATASET**"""

from google.colab import files
files.download("Cleaned_Data.xlsx")